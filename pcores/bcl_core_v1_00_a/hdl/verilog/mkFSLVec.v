//
// Generated by Bluespec Compiler, version 2012.05.beta1 (build 28702, 2012-05-14)
//
// On Thu Nov  1 12:05:35 EDT 2012
//
// Method conflict info:
// Method: fsls_0_canPut
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_0_put
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_0_put
//
// Method: fsls_0_canGet
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_0_get
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_0_get
//
// Method: fsls_0_getID
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_0_getTxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_0_getRxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_1_canPut
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_1_put
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_1_put
//
// Method: fsls_1_canGet
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_1_get
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_1_get
//
// Method: fsls_1_getID
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_1_getTxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_1_getRxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_2_canPut
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_2_put
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_2_put
//
// Method: fsls_2_canGet
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_2_get
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_2_get
//
// Method: fsls_2_getID
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_2_getTxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_2_getRxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_3_canPut
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_3_put
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_3_put
//
// Method: fsls_3_canGet
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_3_get
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
// Conflicts: fsls_3_get
//
// Method: fsls_3_getID
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_3_getTxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: fsls_3_getRxBSZ
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read,
// 	       hw_cnt_write
//
// Method: hw_cnt_read
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ,
// 	       hw_cnt_read
// Sequenced before (restricted): hw_cnt_write
//
// Method: hw_cnt_write
// Conflict-free: fsls_0_canPut,
// 	       fsls_0_put,
// 	       fsls_0_canGet,
// 	       fsls_0_get,
// 	       fsls_0_getID,
// 	       fsls_0_getTxBSZ,
// 	       fsls_0_getRxBSZ,
// 	       fsls_1_canPut,
// 	       fsls_1_put,
// 	       fsls_1_canGet,
// 	       fsls_1_get,
// 	       fsls_1_getID,
// 	       fsls_1_getTxBSZ,
// 	       fsls_1_getRxBSZ,
// 	       fsls_2_canPut,
// 	       fsls_2_put,
// 	       fsls_2_canGet,
// 	       fsls_2_get,
// 	       fsls_2_getID,
// 	       fsls_2_getTxBSZ,
// 	       fsls_2_getRxBSZ,
// 	       fsls_3_canPut,
// 	       fsls_3_put,
// 	       fsls_3_canGet,
// 	       fsls_3_get,
// 	       fsls_3_getID,
// 	       fsls_3_getTxBSZ,
// 	       fsls_3_getRxBSZ
// Sequenced before (restricted): hw_cnt_write
// Sequenced after (restricted): hw_cnt_read
//
//
// Ports:
// Name                         I/O  size props
// fsls_0_canPut                  O     1 reg
// RDY_fsls_0_canPut              O     1 const
// RDY_fsls_0_put                 O     1 reg
// fsls_0_canGet                  O     1 reg
// RDY_fsls_0_canGet              O     1 const
// fsls_0_get                     O    32
// RDY_fsls_0_get                 O     1 reg
// fsls_0_getID                   O    32 const
// RDY_fsls_0_getID               O     1 const
// fsls_0_getTxBSZ                O    32 const
// RDY_fsls_0_getTxBSZ            O     1 const
// fsls_0_getRxBSZ                O    32 const
// RDY_fsls_0_getRxBSZ            O     1 const
// fsls_1_canPut                  O     1 reg
// RDY_fsls_1_canPut              O     1 const
// RDY_fsls_1_put                 O     1 reg
// fsls_1_canGet                  O     1 reg
// RDY_fsls_1_canGet              O     1 const
// fsls_1_get                     O    32
// RDY_fsls_1_get                 O     1 reg
// fsls_1_getID                   O    32 const
// RDY_fsls_1_getID               O     1 const
// fsls_1_getTxBSZ                O    32 const
// RDY_fsls_1_getTxBSZ            O     1 const
// fsls_1_getRxBSZ                O    32 const
// RDY_fsls_1_getRxBSZ            O     1 const
// fsls_2_canPut                  O     1 reg
// RDY_fsls_2_canPut              O     1 const
// RDY_fsls_2_put                 O     1 reg
// fsls_2_canGet                  O     1 reg
// RDY_fsls_2_canGet              O     1 const
// fsls_2_get                     O    32
// RDY_fsls_2_get                 O     1 reg
// fsls_2_getID                   O    32 const
// RDY_fsls_2_getID               O     1 const
// fsls_2_getTxBSZ                O    32 const
// RDY_fsls_2_getTxBSZ            O     1 const
// fsls_2_getRxBSZ                O    32 const
// RDY_fsls_2_getRxBSZ            O     1 const
// fsls_3_canPut                  O     1 reg
// RDY_fsls_3_canPut              O     1 const
// RDY_fsls_3_put                 O     1 reg
// fsls_3_canGet                  O     1 reg
// RDY_fsls_3_canGet              O     1 const
// fsls_3_get                     O    32
// RDY_fsls_3_get                 O     1 reg
// fsls_3_getID                   O    32 const
// RDY_fsls_3_getID               O     1 const
// fsls_3_getTxBSZ                O    32 const
// RDY_fsls_3_getTxBSZ            O     1 const
// fsls_3_getRxBSZ                O    32 const
// RDY_fsls_3_getRxBSZ            O     1 const
// hw_cnt_read                    O    64 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// fsls_0_put_v                   I    32 reg
// fsls_1_put_v                   I    32 reg
// fsls_2_put_v                   I    32 reg
// fsls_3_put_v                   I    32 reg
// hw_cnt_write_v                 I    64
// EN_fsls_0_put                  I     1
// EN_fsls_1_put                  I     1
// EN_fsls_2_put                  I     1
// EN_fsls_3_put                  I     1
// EN_hw_cnt_write                I     1
// EN_fsls_0_get                  I     1
// EN_fsls_1_get                  I     1
// EN_fsls_2_get                  I     1
// EN_fsls_3_get                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkFSLVec(CLK,
		RST_N,

		fsls_0_canPut,
		RDY_fsls_0_canPut,

		fsls_0_put_v,
		EN_fsls_0_put,
		RDY_fsls_0_put,

		fsls_0_canGet,
		RDY_fsls_0_canGet,

		EN_fsls_0_get,
		fsls_0_get,
		RDY_fsls_0_get,

		fsls_0_getID,
		RDY_fsls_0_getID,

		fsls_0_getTxBSZ,
		RDY_fsls_0_getTxBSZ,

		fsls_0_getRxBSZ,
		RDY_fsls_0_getRxBSZ,

		fsls_1_canPut,
		RDY_fsls_1_canPut,

		fsls_1_put_v,
		EN_fsls_1_put,
		RDY_fsls_1_put,

		fsls_1_canGet,
		RDY_fsls_1_canGet,

		EN_fsls_1_get,
		fsls_1_get,
		RDY_fsls_1_get,

		fsls_1_getID,
		RDY_fsls_1_getID,

		fsls_1_getTxBSZ,
		RDY_fsls_1_getTxBSZ,

		fsls_1_getRxBSZ,
		RDY_fsls_1_getRxBSZ,

		fsls_2_canPut,
		RDY_fsls_2_canPut,

		fsls_2_put_v,
		EN_fsls_2_put,
		RDY_fsls_2_put,

		fsls_2_canGet,
		RDY_fsls_2_canGet,

		EN_fsls_2_get,
		fsls_2_get,
		RDY_fsls_2_get,

		fsls_2_getID,
		RDY_fsls_2_getID,

		fsls_2_getTxBSZ,
		RDY_fsls_2_getTxBSZ,

		fsls_2_getRxBSZ,
		RDY_fsls_2_getRxBSZ,

		fsls_3_canPut,
		RDY_fsls_3_canPut,

		fsls_3_put_v,
		EN_fsls_3_put,
		RDY_fsls_3_put,

		fsls_3_canGet,
		RDY_fsls_3_canGet,

		EN_fsls_3_get,
		fsls_3_get,
		RDY_fsls_3_get,

		fsls_3_getID,
		RDY_fsls_3_getID,

		fsls_3_getTxBSZ,
		RDY_fsls_3_getTxBSZ,

		fsls_3_getRxBSZ,
		RDY_fsls_3_getRxBSZ,

		hw_cnt_read,

		hw_cnt_write_v,
		EN_hw_cnt_write);
  input  CLK;
  input  RST_N;

  // value method fsls_0_canPut
  output fsls_0_canPut;
  output RDY_fsls_0_canPut;

  // action method fsls_0_put
  input  [31 : 0] fsls_0_put_v;
  input  EN_fsls_0_put;
  output RDY_fsls_0_put;

  // value method fsls_0_canGet
  output fsls_0_canGet;
  output RDY_fsls_0_canGet;

  // actionvalue method fsls_0_get
  input  EN_fsls_0_get;
  output [31 : 0] fsls_0_get;
  output RDY_fsls_0_get;

  // value method fsls_0_getID
  output [31 : 0] fsls_0_getID;
  output RDY_fsls_0_getID;

  // value method fsls_0_getTxBSZ
  output [31 : 0] fsls_0_getTxBSZ;
  output RDY_fsls_0_getTxBSZ;

  // value method fsls_0_getRxBSZ
  output [31 : 0] fsls_0_getRxBSZ;
  output RDY_fsls_0_getRxBSZ;

  // value method fsls_1_canPut
  output fsls_1_canPut;
  output RDY_fsls_1_canPut;

  // action method fsls_1_put
  input  [31 : 0] fsls_1_put_v;
  input  EN_fsls_1_put;
  output RDY_fsls_1_put;

  // value method fsls_1_canGet
  output fsls_1_canGet;
  output RDY_fsls_1_canGet;

  // actionvalue method fsls_1_get
  input  EN_fsls_1_get;
  output [31 : 0] fsls_1_get;
  output RDY_fsls_1_get;

  // value method fsls_1_getID
  output [31 : 0] fsls_1_getID;
  output RDY_fsls_1_getID;

  // value method fsls_1_getTxBSZ
  output [31 : 0] fsls_1_getTxBSZ;
  output RDY_fsls_1_getTxBSZ;

  // value method fsls_1_getRxBSZ
  output [31 : 0] fsls_1_getRxBSZ;
  output RDY_fsls_1_getRxBSZ;

  // value method fsls_2_canPut
  output fsls_2_canPut;
  output RDY_fsls_2_canPut;

  // action method fsls_2_put
  input  [31 : 0] fsls_2_put_v;
  input  EN_fsls_2_put;
  output RDY_fsls_2_put;

  // value method fsls_2_canGet
  output fsls_2_canGet;
  output RDY_fsls_2_canGet;

  // actionvalue method fsls_2_get
  input  EN_fsls_2_get;
  output [31 : 0] fsls_2_get;
  output RDY_fsls_2_get;

  // value method fsls_2_getID
  output [31 : 0] fsls_2_getID;
  output RDY_fsls_2_getID;

  // value method fsls_2_getTxBSZ
  output [31 : 0] fsls_2_getTxBSZ;
  output RDY_fsls_2_getTxBSZ;

  // value method fsls_2_getRxBSZ
  output [31 : 0] fsls_2_getRxBSZ;
  output RDY_fsls_2_getRxBSZ;

  // value method fsls_3_canPut
  output fsls_3_canPut;
  output RDY_fsls_3_canPut;

  // action method fsls_3_put
  input  [31 : 0] fsls_3_put_v;
  input  EN_fsls_3_put;
  output RDY_fsls_3_put;

  // value method fsls_3_canGet
  output fsls_3_canGet;
  output RDY_fsls_3_canGet;

  // actionvalue method fsls_3_get
  input  EN_fsls_3_get;
  output [31 : 0] fsls_3_get;
  output RDY_fsls_3_get;

  // value method fsls_3_getID
  output [31 : 0] fsls_3_getID;
  output RDY_fsls_3_getID;

  // value method fsls_3_getTxBSZ
  output [31 : 0] fsls_3_getTxBSZ;
  output RDY_fsls_3_getTxBSZ;

  // value method fsls_3_getRxBSZ
  output [31 : 0] fsls_3_getRxBSZ;
  output RDY_fsls_3_getRxBSZ;

  // value method hw_cnt_read
  output [63 : 0] hw_cnt_read;

  // action method hw_cnt_write
  input  [63 : 0] hw_cnt_write_v;
  input  EN_hw_cnt_write;

  // signals for module outputs
  wire [63 : 0] hw_cnt_read;
  wire [31 : 0] fsls_0_get,
		fsls_0_getID,
		fsls_0_getRxBSZ,
		fsls_0_getTxBSZ,
		fsls_1_get,
		fsls_1_getID,
		fsls_1_getRxBSZ,
		fsls_1_getTxBSZ,
		fsls_2_get,
		fsls_2_getID,
		fsls_2_getRxBSZ,
		fsls_2_getTxBSZ,
		fsls_3_get,
		fsls_3_getID,
		fsls_3_getRxBSZ,
		fsls_3_getTxBSZ;
  wire RDY_fsls_0_canGet,
       RDY_fsls_0_canPut,
       RDY_fsls_0_get,
       RDY_fsls_0_getID,
       RDY_fsls_0_getRxBSZ,
       RDY_fsls_0_getTxBSZ,
       RDY_fsls_0_put,
       RDY_fsls_1_canGet,
       RDY_fsls_1_canPut,
       RDY_fsls_1_get,
       RDY_fsls_1_getID,
       RDY_fsls_1_getRxBSZ,
       RDY_fsls_1_getTxBSZ,
       RDY_fsls_1_put,
       RDY_fsls_2_canGet,
       RDY_fsls_2_canPut,
       RDY_fsls_2_get,
       RDY_fsls_2_getID,
       RDY_fsls_2_getRxBSZ,
       RDY_fsls_2_getTxBSZ,
       RDY_fsls_2_put,
       RDY_fsls_3_canGet,
       RDY_fsls_3_canPut,
       RDY_fsls_3_get,
       RDY_fsls_3_getID,
       RDY_fsls_3_getRxBSZ,
       RDY_fsls_3_getTxBSZ,
       RDY_fsls_3_put,
       fsls_0_canGet,
       fsls_0_canPut,
       fsls_1_canGet,
       fsls_1_canPut,
       fsls_2_canGet,
       fsls_2_canPut,
       fsls_3_canGet,
       fsls_3_canPut;

  // inlined wires
  wire event_wire_wir$whas;

  // register hw_cnt_reg
  reg [63 : 0] hw_cnt_reg;
  wire [63 : 0] hw_cnt_reg$D_IN;
  wire hw_cnt_reg$EN;

  // register sync0_portal_b_from_bits_buff
  reg [31 : 0] sync0_portal_b_from_bits_buff;
  wire [31 : 0] sync0_portal_b_from_bits_buff$D_IN;
  wire sync0_portal_b_from_bits_buff$EN;

  // register sync0_portal_b_from_bits_count
  reg [31 : 0] sync0_portal_b_from_bits_count;
  wire [31 : 0] sync0_portal_b_from_bits_count$D_IN;
  wire sync0_portal_b_from_bits_count$EN;

  // register sync0_portal_b_to_bits_count
  reg [31 : 0] sync0_portal_b_to_bits_count;
  wire [31 : 0] sync0_portal_b_to_bits_count$D_IN;
  wire sync0_portal_b_to_bits_count$EN;

  // register sync1_portal_b_from_bits_buff
  reg [31 : 0] sync1_portal_b_from_bits_buff;
  wire [31 : 0] sync1_portal_b_from_bits_buff$D_IN;
  wire sync1_portal_b_from_bits_buff$EN;

  // register sync1_portal_b_from_bits_count
  reg [31 : 0] sync1_portal_b_from_bits_count;
  wire [31 : 0] sync1_portal_b_from_bits_count$D_IN;
  wire sync1_portal_b_from_bits_count$EN;

  // register sync1_portal_b_to_bits_count
  reg [31 : 0] sync1_portal_b_to_bits_count;
  wire [31 : 0] sync1_portal_b_to_bits_count$D_IN;
  wire sync1_portal_b_to_bits_count$EN;

  // register sync2_portal_b_from_bits_buff
  reg [31 : 0] sync2_portal_b_from_bits_buff;
  wire [31 : 0] sync2_portal_b_from_bits_buff$D_IN;
  wire sync2_portal_b_from_bits_buff$EN;

  // register sync2_portal_b_from_bits_count
  reg [31 : 0] sync2_portal_b_from_bits_count;
  wire [31 : 0] sync2_portal_b_from_bits_count$D_IN;
  wire sync2_portal_b_from_bits_count$EN;

  // register sync2_portal_b_to_bits_count
  reg [31 : 0] sync2_portal_b_to_bits_count;
  wire [31 : 0] sync2_portal_b_to_bits_count$D_IN;
  wire sync2_portal_b_to_bits_count$EN;

  // register sync3_portal_b_from_bits_buff
  reg [31 : 0] sync3_portal_b_from_bits_buff;
  wire [31 : 0] sync3_portal_b_from_bits_buff$D_IN;
  wire sync3_portal_b_from_bits_buff$EN;

  // register sync3_portal_b_from_bits_count
  reg [31 : 0] sync3_portal_b_from_bits_count;
  wire [31 : 0] sync3_portal_b_from_bits_count$D_IN;
  wire sync3_portal_b_from_bits_count$EN;

  // register sync3_portal_b_to_bits_count
  reg [31 : 0] sync3_portal_b_to_bits_count;
  wire [31 : 0] sync3_portal_b_to_bits_count$D_IN;
  wire sync3_portal_b_to_bits_count$EN;

  // ports of submodule sync0_portal_b_from_bits_fifo
  wire [31 : 0] sync0_portal_b_from_bits_fifo$D_IN,
		sync0_portal_b_from_bits_fifo$D_OUT;
  wire sync0_portal_b_from_bits_fifo$CLR,
       sync0_portal_b_from_bits_fifo$DEQ,
       sync0_portal_b_from_bits_fifo$EMPTY_N,
       sync0_portal_b_from_bits_fifo$ENQ,
       sync0_portal_b_from_bits_fifo$FULL_N;

  // ports of submodule sync0_portal_b_to_bits_fifo
  wire [31 : 0] sync0_portal_b_to_bits_fifo$D_IN,
		sync0_portal_b_to_bits_fifo$D_OUT;
  wire sync0_portal_b_to_bits_fifo$CLR,
       sync0_portal_b_to_bits_fifo$DEQ,
       sync0_portal_b_to_bits_fifo$EMPTY_N,
       sync0_portal_b_to_bits_fifo$ENQ,
       sync0_portal_b_to_bits_fifo$FULL_N;

  // ports of submodule sync1_portal_b_from_bits_fifo
  wire [31 : 0] sync1_portal_b_from_bits_fifo$D_IN,
		sync1_portal_b_from_bits_fifo$D_OUT;
  wire sync1_portal_b_from_bits_fifo$CLR,
       sync1_portal_b_from_bits_fifo$DEQ,
       sync1_portal_b_from_bits_fifo$EMPTY_N,
       sync1_portal_b_from_bits_fifo$ENQ,
       sync1_portal_b_from_bits_fifo$FULL_N;

  // ports of submodule sync1_portal_b_to_bits_fifo
  wire [31 : 0] sync1_portal_b_to_bits_fifo$D_IN,
		sync1_portal_b_to_bits_fifo$D_OUT;
  wire sync1_portal_b_to_bits_fifo$CLR,
       sync1_portal_b_to_bits_fifo$DEQ,
       sync1_portal_b_to_bits_fifo$EMPTY_N,
       sync1_portal_b_to_bits_fifo$ENQ,
       sync1_portal_b_to_bits_fifo$FULL_N;

  // ports of submodule sync2_portal_b_from_bits_fifo
  wire [31 : 0] sync2_portal_b_from_bits_fifo$D_IN,
		sync2_portal_b_from_bits_fifo$D_OUT;
  wire sync2_portal_b_from_bits_fifo$CLR,
       sync2_portal_b_from_bits_fifo$DEQ,
       sync2_portal_b_from_bits_fifo$EMPTY_N,
       sync2_portal_b_from_bits_fifo$ENQ,
       sync2_portal_b_from_bits_fifo$FULL_N;

  // ports of submodule sync2_portal_b_to_bits_fifo
  wire [31 : 0] sync2_portal_b_to_bits_fifo$D_IN,
		sync2_portal_b_to_bits_fifo$D_OUT;
  wire sync2_portal_b_to_bits_fifo$CLR,
       sync2_portal_b_to_bits_fifo$DEQ,
       sync2_portal_b_to_bits_fifo$EMPTY_N,
       sync2_portal_b_to_bits_fifo$ENQ,
       sync2_portal_b_to_bits_fifo$FULL_N;

  // ports of submodule sync3_portal_b_from_bits_fifo
  wire [31 : 0] sync3_portal_b_from_bits_fifo$D_IN,
		sync3_portal_b_from_bits_fifo$D_OUT;
  wire sync3_portal_b_from_bits_fifo$CLR,
       sync3_portal_b_from_bits_fifo$DEQ,
       sync3_portal_b_from_bits_fifo$EMPTY_N,
       sync3_portal_b_from_bits_fifo$ENQ,
       sync3_portal_b_from_bits_fifo$FULL_N;

  // ports of submodule sync3_portal_b_to_bits_fifo
  wire [31 : 0] sync3_portal_b_to_bits_fifo$D_IN,
		sync3_portal_b_to_bits_fifo$D_OUT;
  wire sync3_portal_b_to_bits_fifo$CLR,
       sync3_portal_b_to_bits_fifo$DEQ,
       sync3_portal_b_to_bits_fifo$EMPTY_N,
       sync3_portal_b_to_bits_fifo$ENQ,
       sync3_portal_b_to_bits_fifo$FULL_N;

  // inputs to muxes for submodule ports
  wire [63 : 0] MUX_hw_cnt_reg$write_1__VAL_2;

  // remaining internal signals
  wire [31 : 0] x__h5923,
		x__h6108,
		x__h6198,
		x__h6395,
		x__h6580,
		x__h6670,
		x__h6867,
		x__h7052,
		x__h7142,
		x__h7339,
		x__h7524,
		x__h7614;

  // value method fsls_0_canPut
  assign fsls_0_canPut = sync0_portal_b_from_bits_fifo$FULL_N ;
  assign RDY_fsls_0_canPut = 1'd1 ;

  // action method fsls_0_put
  assign RDY_fsls_0_put = sync0_portal_b_from_bits_fifo$FULL_N ;

  // value method fsls_0_canGet
  assign fsls_0_canGet = sync0_portal_b_to_bits_fifo$EMPTY_N ;
  assign RDY_fsls_0_canGet = 1'd1 ;

  // actionvalue method fsls_0_get
  assign fsls_0_get = sync0_portal_b_to_bits_fifo$D_OUT >> x__h6198 ;
  assign RDY_fsls_0_get = sync0_portal_b_to_bits_fifo$EMPTY_N ;

  // value method fsls_0_getID
  assign fsls_0_getID = 32'd0 ;
  assign RDY_fsls_0_getID = 1'd1 ;

  // value method fsls_0_getTxBSZ
  assign fsls_0_getTxBSZ = 32'd1 ;
  assign RDY_fsls_0_getTxBSZ = 1'd1 ;

  // value method fsls_0_getRxBSZ
  assign fsls_0_getRxBSZ = 32'd1 ;
  assign RDY_fsls_0_getRxBSZ = 1'd1 ;

  // value method fsls_1_canPut
  assign fsls_1_canPut = sync1_portal_b_from_bits_fifo$FULL_N ;
  assign RDY_fsls_1_canPut = 1'd1 ;

  // action method fsls_1_put
  assign RDY_fsls_1_put = sync1_portal_b_from_bits_fifo$FULL_N ;

  // value method fsls_1_canGet
  assign fsls_1_canGet = sync1_portal_b_to_bits_fifo$EMPTY_N ;
  assign RDY_fsls_1_canGet = 1'd1 ;

  // actionvalue method fsls_1_get
  assign fsls_1_get = sync1_portal_b_to_bits_fifo$D_OUT >> x__h6670 ;
  assign RDY_fsls_1_get = sync1_portal_b_to_bits_fifo$EMPTY_N ;

  // value method fsls_1_getID
  assign fsls_1_getID = 32'd1 ;
  assign RDY_fsls_1_getID = 1'd1 ;

  // value method fsls_1_getTxBSZ
  assign fsls_1_getTxBSZ = 32'd32 ;
  assign RDY_fsls_1_getTxBSZ = 1'd1 ;

  // value method fsls_1_getRxBSZ
  assign fsls_1_getRxBSZ = 32'd32 ;
  assign RDY_fsls_1_getRxBSZ = 1'd1 ;

  // value method fsls_2_canPut
  assign fsls_2_canPut = sync2_portal_b_from_bits_fifo$FULL_N ;
  assign RDY_fsls_2_canPut = 1'd1 ;

  // action method fsls_2_put
  assign RDY_fsls_2_put = sync2_portal_b_from_bits_fifo$FULL_N ;

  // value method fsls_2_canGet
  assign fsls_2_canGet = sync2_portal_b_to_bits_fifo$EMPTY_N ;
  assign RDY_fsls_2_canGet = 1'd1 ;

  // actionvalue method fsls_2_get
  assign fsls_2_get = sync2_portal_b_to_bits_fifo$D_OUT >> x__h7142 ;
  assign RDY_fsls_2_get = sync2_portal_b_to_bits_fifo$EMPTY_N ;

  // value method fsls_2_getID
  assign fsls_2_getID = 32'd2 ;
  assign RDY_fsls_2_getID = 1'd1 ;

  // value method fsls_2_getTxBSZ
  assign fsls_2_getTxBSZ = 32'd64 ;
  assign RDY_fsls_2_getTxBSZ = 1'd1 ;

  // value method fsls_2_getRxBSZ
  assign fsls_2_getRxBSZ = 32'd64 ;
  assign RDY_fsls_2_getRxBSZ = 1'd1 ;

  // value method fsls_3_canPut
  assign fsls_3_canPut = sync3_portal_b_from_bits_fifo$FULL_N ;
  assign RDY_fsls_3_canPut = 1'd1 ;

  // action method fsls_3_put
  assign RDY_fsls_3_put = sync3_portal_b_from_bits_fifo$FULL_N ;

  // value method fsls_3_canGet
  assign fsls_3_canGet = sync3_portal_b_to_bits_fifo$EMPTY_N ;
  assign RDY_fsls_3_canGet = 1'd1 ;

  // actionvalue method fsls_3_get
  assign fsls_3_get = sync3_portal_b_to_bits_fifo$D_OUT >> x__h7614 ;
  assign RDY_fsls_3_get = sync3_portal_b_to_bits_fifo$EMPTY_N ;

  // value method fsls_3_getID
  assign fsls_3_getID = 32'd3 ;
  assign RDY_fsls_3_getID = 1'd1 ;

  // value method fsls_3_getTxBSZ
  assign fsls_3_getTxBSZ = 32'd128 ;
  assign RDY_fsls_3_getTxBSZ = 1'd1 ;

  // value method fsls_3_getRxBSZ
  assign fsls_3_getRxBSZ = 32'd128 ;
  assign RDY_fsls_3_getRxBSZ = 1'd1 ;

  // value method hw_cnt_read
  assign hw_cnt_read = hw_cnt_reg ;

  // submodule sync0_portal_b_from_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync0_portal_b_from_bits_fifo(.RST_N(RST_N),
							 .CLK(CLK),
							 .D_IN(sync0_portal_b_from_bits_fifo$D_IN),
							 .ENQ(sync0_portal_b_from_bits_fifo$ENQ),
							 .DEQ(sync0_portal_b_from_bits_fifo$DEQ),
							 .CLR(sync0_portal_b_from_bits_fifo$CLR),
							 .D_OUT(sync0_portal_b_from_bits_fifo$D_OUT),
							 .FULL_N(sync0_portal_b_from_bits_fifo$FULL_N),
							 .EMPTY_N(sync0_portal_b_from_bits_fifo$EMPTY_N));

  // submodule sync0_portal_b_to_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync0_portal_b_to_bits_fifo(.RST_N(RST_N),
						       .CLK(CLK),
						       .D_IN(sync0_portal_b_to_bits_fifo$D_IN),
						       .ENQ(sync0_portal_b_to_bits_fifo$ENQ),
						       .DEQ(sync0_portal_b_to_bits_fifo$DEQ),
						       .CLR(sync0_portal_b_to_bits_fifo$CLR),
						       .D_OUT(sync0_portal_b_to_bits_fifo$D_OUT),
						       .FULL_N(sync0_portal_b_to_bits_fifo$FULL_N),
						       .EMPTY_N(sync0_portal_b_to_bits_fifo$EMPTY_N));

  // submodule sync1_portal_b_from_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync1_portal_b_from_bits_fifo(.RST_N(RST_N),
							 .CLK(CLK),
							 .D_IN(sync1_portal_b_from_bits_fifo$D_IN),
							 .ENQ(sync1_portal_b_from_bits_fifo$ENQ),
							 .DEQ(sync1_portal_b_from_bits_fifo$DEQ),
							 .CLR(sync1_portal_b_from_bits_fifo$CLR),
							 .D_OUT(sync1_portal_b_from_bits_fifo$D_OUT),
							 .FULL_N(sync1_portal_b_from_bits_fifo$FULL_N),
							 .EMPTY_N(sync1_portal_b_from_bits_fifo$EMPTY_N));

  // submodule sync1_portal_b_to_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync1_portal_b_to_bits_fifo(.RST_N(RST_N),
						       .CLK(CLK),
						       .D_IN(sync1_portal_b_to_bits_fifo$D_IN),
						       .ENQ(sync1_portal_b_to_bits_fifo$ENQ),
						       .DEQ(sync1_portal_b_to_bits_fifo$DEQ),
						       .CLR(sync1_portal_b_to_bits_fifo$CLR),
						       .D_OUT(sync1_portal_b_to_bits_fifo$D_OUT),
						       .FULL_N(sync1_portal_b_to_bits_fifo$FULL_N),
						       .EMPTY_N(sync1_portal_b_to_bits_fifo$EMPTY_N));

  // submodule sync2_portal_b_from_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync2_portal_b_from_bits_fifo(.RST_N(RST_N),
							 .CLK(CLK),
							 .D_IN(sync2_portal_b_from_bits_fifo$D_IN),
							 .ENQ(sync2_portal_b_from_bits_fifo$ENQ),
							 .DEQ(sync2_portal_b_from_bits_fifo$DEQ),
							 .CLR(sync2_portal_b_from_bits_fifo$CLR),
							 .D_OUT(sync2_portal_b_from_bits_fifo$D_OUT),
							 .FULL_N(sync2_portal_b_from_bits_fifo$FULL_N),
							 .EMPTY_N(sync2_portal_b_from_bits_fifo$EMPTY_N));

  // submodule sync2_portal_b_to_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync2_portal_b_to_bits_fifo(.RST_N(RST_N),
						       .CLK(CLK),
						       .D_IN(sync2_portal_b_to_bits_fifo$D_IN),
						       .ENQ(sync2_portal_b_to_bits_fifo$ENQ),
						       .DEQ(sync2_portal_b_to_bits_fifo$DEQ),
						       .CLR(sync2_portal_b_to_bits_fifo$CLR),
						       .D_OUT(sync2_portal_b_to_bits_fifo$D_OUT),
						       .FULL_N(sync2_portal_b_to_bits_fifo$FULL_N),
						       .EMPTY_N(sync2_portal_b_to_bits_fifo$EMPTY_N));

  // submodule sync3_portal_b_from_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync3_portal_b_from_bits_fifo(.RST_N(RST_N),
							 .CLK(CLK),
							 .D_IN(sync3_portal_b_from_bits_fifo$D_IN),
							 .ENQ(sync3_portal_b_from_bits_fifo$ENQ),
							 .DEQ(sync3_portal_b_from_bits_fifo$DEQ),
							 .CLR(sync3_portal_b_from_bits_fifo$CLR),
							 .D_OUT(sync3_portal_b_from_bits_fifo$D_OUT),
							 .FULL_N(sync3_portal_b_from_bits_fifo$FULL_N),
							 .EMPTY_N(sync3_portal_b_from_bits_fifo$EMPTY_N));

  // submodule sync3_portal_b_to_bits_fifo
  FIFO2 #(.width(32'd32),
	  .guarded(32'd0)) sync3_portal_b_to_bits_fifo(.RST_N(RST_N),
						       .CLK(CLK),
						       .D_IN(sync3_portal_b_to_bits_fifo$D_IN),
						       .ENQ(sync3_portal_b_to_bits_fifo$ENQ),
						       .DEQ(sync3_portal_b_to_bits_fifo$DEQ),
						       .CLR(sync3_portal_b_to_bits_fifo$CLR),
						       .D_OUT(sync3_portal_b_to_bits_fifo$D_OUT),
						       .FULL_N(sync3_portal_b_to_bits_fifo$FULL_N),
						       .EMPTY_N(sync3_portal_b_to_bits_fifo$EMPTY_N));

  // inputs to muxes for submodule ports
  assign MUX_hw_cnt_reg$write_1__VAL_2 = hw_cnt_reg + 64'd1 ;

  // inlined wires
  assign event_wire_wir$whas =
	     sync0_portal_b_from_bits_fifo$EMPTY_N &&
	     sync0_portal_b_to_bits_fifo$FULL_N ||
	     sync1_portal_b_from_bits_fifo$EMPTY_N &&
	     sync1_portal_b_to_bits_fifo$FULL_N ||
	     sync2_portal_b_from_bits_fifo$EMPTY_N &&
	     sync2_portal_b_to_bits_fifo$FULL_N ||
	     sync3_portal_b_from_bits_fifo$EMPTY_N &&
	     sync3_portal_b_to_bits_fifo$FULL_N ;

  // register hw_cnt_reg
  assign hw_cnt_reg$D_IN =
	     EN_hw_cnt_write ?
	       hw_cnt_write_v :
	       MUX_hw_cnt_reg$write_1__VAL_2 ;
  assign hw_cnt_reg$EN = event_wire_wir$whas || EN_hw_cnt_write ;

  // register sync0_portal_b_from_bits_buff
  assign sync0_portal_b_from_bits_buff$D_IN = fsls_0_put_v ;
  assign sync0_portal_b_from_bits_buff$EN = EN_fsls_0_put ;

  // register sync0_portal_b_from_bits_count
  assign sync0_portal_b_from_bits_count$D_IN =
	     (sync0_portal_b_from_bits_count == 32'd0) ?
	       sync0_portal_b_from_bits_count :
	       x__h5923 ;
  assign sync0_portal_b_from_bits_count$EN = EN_fsls_0_put ;

  // register sync0_portal_b_to_bits_count
  assign sync0_portal_b_to_bits_count$D_IN =
	     (sync0_portal_b_to_bits_count == 32'd0) ?
	       sync0_portal_b_to_bits_count :
	       x__h6108 ;
  assign sync0_portal_b_to_bits_count$EN = EN_fsls_0_get ;

  // register sync1_portal_b_from_bits_buff
  assign sync1_portal_b_from_bits_buff$D_IN = fsls_1_put_v ;
  assign sync1_portal_b_from_bits_buff$EN = EN_fsls_1_put ;

  // register sync1_portal_b_from_bits_count
  assign sync1_portal_b_from_bits_count$D_IN =
	     (sync1_portal_b_from_bits_count == 32'd0) ?
	       sync1_portal_b_from_bits_count :
	       x__h6395 ;
  assign sync1_portal_b_from_bits_count$EN = EN_fsls_1_put ;

  // register sync1_portal_b_to_bits_count
  assign sync1_portal_b_to_bits_count$D_IN =
	     (sync1_portal_b_to_bits_count == 32'd0) ?
	       sync1_portal_b_to_bits_count :
	       x__h6580 ;
  assign sync1_portal_b_to_bits_count$EN = EN_fsls_1_get ;

  // register sync2_portal_b_from_bits_buff
  assign sync2_portal_b_from_bits_buff$D_IN = fsls_2_put_v ;
  assign sync2_portal_b_from_bits_buff$EN = EN_fsls_2_put ;

  // register sync2_portal_b_from_bits_count
  assign sync2_portal_b_from_bits_count$D_IN =
	     (sync2_portal_b_from_bits_count == 32'd0) ?
	       sync2_portal_b_from_bits_count :
	       x__h6867 ;
  assign sync2_portal_b_from_bits_count$EN = EN_fsls_2_put ;

  // register sync2_portal_b_to_bits_count
  assign sync2_portal_b_to_bits_count$D_IN =
	     (sync2_portal_b_to_bits_count == 32'd0) ?
	       sync2_portal_b_to_bits_count :
	       x__h7052 ;
  assign sync2_portal_b_to_bits_count$EN = EN_fsls_2_get ;

  // register sync3_portal_b_from_bits_buff
  assign sync3_portal_b_from_bits_buff$D_IN = fsls_3_put_v ;
  assign sync3_portal_b_from_bits_buff$EN = EN_fsls_3_put ;

  // register sync3_portal_b_from_bits_count
  assign sync3_portal_b_from_bits_count$D_IN =
	     (sync3_portal_b_from_bits_count == 32'd0) ?
	       sync3_portal_b_from_bits_count :
	       x__h7339 ;
  assign sync3_portal_b_from_bits_count$EN = EN_fsls_3_put ;

  // register sync3_portal_b_to_bits_count
  assign sync3_portal_b_to_bits_count$D_IN =
	     (sync3_portal_b_to_bits_count == 32'd0) ?
	       sync3_portal_b_to_bits_count :
	       x__h7524 ;
  assign sync3_portal_b_to_bits_count$EN = EN_fsls_3_get ;

  // submodule sync0_portal_b_from_bits_fifo
  assign sync0_portal_b_from_bits_fifo$D_IN = fsls_0_put_v ;
  assign sync0_portal_b_from_bits_fifo$ENQ =
	     EN_fsls_0_put && sync0_portal_b_from_bits_count == 32'd0 ;
  assign sync0_portal_b_from_bits_fifo$DEQ =
	     sync0_portal_b_from_bits_fifo$EMPTY_N &&
	     sync0_portal_b_to_bits_fifo$FULL_N ;
  assign sync0_portal_b_from_bits_fifo$CLR = 1'b0 ;

  // submodule sync0_portal_b_to_bits_fifo
  assign sync0_portal_b_to_bits_fifo$D_IN =
	     sync0_portal_b_from_bits_fifo$D_OUT ;
  assign sync0_portal_b_to_bits_fifo$ENQ =
	     sync0_portal_b_from_bits_fifo$EMPTY_N &&
	     sync0_portal_b_to_bits_fifo$FULL_N ;
  assign sync0_portal_b_to_bits_fifo$DEQ =
	     EN_fsls_0_get && sync0_portal_b_to_bits_count == 32'd0 ;
  assign sync0_portal_b_to_bits_fifo$CLR = 1'b0 ;

  // submodule sync1_portal_b_from_bits_fifo
  assign sync1_portal_b_from_bits_fifo$D_IN = fsls_1_put_v ;
  assign sync1_portal_b_from_bits_fifo$ENQ =
	     EN_fsls_1_put && sync1_portal_b_from_bits_count == 32'd0 ;
  assign sync1_portal_b_from_bits_fifo$DEQ =
	     sync1_portal_b_from_bits_fifo$EMPTY_N &&
	     sync1_portal_b_to_bits_fifo$FULL_N ;
  assign sync1_portal_b_from_bits_fifo$CLR = 1'b0 ;

  // submodule sync1_portal_b_to_bits_fifo
  assign sync1_portal_b_to_bits_fifo$D_IN =
	     sync1_portal_b_from_bits_fifo$D_OUT ;
  assign sync1_portal_b_to_bits_fifo$ENQ =
	     sync1_portal_b_from_bits_fifo$EMPTY_N &&
	     sync1_portal_b_to_bits_fifo$FULL_N ;
  assign sync1_portal_b_to_bits_fifo$DEQ =
	     EN_fsls_1_get && sync1_portal_b_to_bits_count == 32'd0 ;
  assign sync1_portal_b_to_bits_fifo$CLR = 1'b0 ;

  // submodule sync2_portal_b_from_bits_fifo
  assign sync2_portal_b_from_bits_fifo$D_IN = fsls_2_put_v ;
  assign sync2_portal_b_from_bits_fifo$ENQ =
	     EN_fsls_2_put && sync2_portal_b_from_bits_count == 32'd0 ;
  assign sync2_portal_b_from_bits_fifo$DEQ =
	     sync2_portal_b_from_bits_fifo$EMPTY_N &&
	     sync2_portal_b_to_bits_fifo$FULL_N ;
  assign sync2_portal_b_from_bits_fifo$CLR = 1'b0 ;

  // submodule sync2_portal_b_to_bits_fifo
  assign sync2_portal_b_to_bits_fifo$D_IN =
	     sync2_portal_b_from_bits_fifo$D_OUT ;
  assign sync2_portal_b_to_bits_fifo$ENQ =
	     sync2_portal_b_from_bits_fifo$EMPTY_N &&
	     sync2_portal_b_to_bits_fifo$FULL_N ;
  assign sync2_portal_b_to_bits_fifo$DEQ =
	     EN_fsls_2_get && sync2_portal_b_to_bits_count == 32'd0 ;
  assign sync2_portal_b_to_bits_fifo$CLR = 1'b0 ;

  // submodule sync3_portal_b_from_bits_fifo
  assign sync3_portal_b_from_bits_fifo$D_IN = fsls_3_put_v ;
  assign sync3_portal_b_from_bits_fifo$ENQ =
	     EN_fsls_3_put && sync3_portal_b_from_bits_count == 32'd0 ;
  assign sync3_portal_b_from_bits_fifo$DEQ =
	     sync3_portal_b_from_bits_fifo$EMPTY_N &&
	     sync3_portal_b_to_bits_fifo$FULL_N ;
  assign sync3_portal_b_from_bits_fifo$CLR = 1'b0 ;

  // submodule sync3_portal_b_to_bits_fifo
  assign sync3_portal_b_to_bits_fifo$D_IN =
	     sync3_portal_b_from_bits_fifo$D_OUT ;
  assign sync3_portal_b_to_bits_fifo$ENQ =
	     sync3_portal_b_from_bits_fifo$EMPTY_N &&
	     sync3_portal_b_to_bits_fifo$FULL_N ;
  assign sync3_portal_b_to_bits_fifo$DEQ =
	     EN_fsls_3_get && sync3_portal_b_to_bits_count == 32'd0 ;
  assign sync3_portal_b_to_bits_fifo$CLR = 1'b0 ;

  // remaining internal signals
  assign x__h5923 = sync0_portal_b_from_bits_count + 32'd1 ;
  assign x__h6108 = sync0_portal_b_to_bits_count + 32'd1 ;
  assign x__h6198 = { sync0_portal_b_to_bits_count[26:0], 5'd0 } ;
  assign x__h6395 = sync1_portal_b_from_bits_count + 32'd1 ;
  assign x__h6580 = sync1_portal_b_to_bits_count + 32'd1 ;
  assign x__h6670 = { sync1_portal_b_to_bits_count[26:0], 5'd0 } ;
  assign x__h6867 = sync2_portal_b_from_bits_count + 32'd1 ;
  assign x__h7052 = sync2_portal_b_to_bits_count + 32'd1 ;
  assign x__h7142 = { sync2_portal_b_to_bits_count[26:0], 5'd0 } ;
  assign x__h7339 = sync3_portal_b_from_bits_count + 32'd1 ;
  assign x__h7524 = sync3_portal_b_to_bits_count + 32'd1 ;
  assign x__h7614 = { sync3_portal_b_to_bits_count[26:0], 5'd0 } ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (!RST_N)
      begin
        hw_cnt_reg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	sync0_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync0_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync0_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync1_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync1_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync1_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync2_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync2_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync2_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync3_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync3_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sync3_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY 32'd0;
      end
    else
      begin
        if (hw_cnt_reg$EN)
	  hw_cnt_reg <= `BSV_ASSIGNMENT_DELAY hw_cnt_reg$D_IN;
	if (sync0_portal_b_from_bits_buff$EN)
	  sync0_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY
	      sync0_portal_b_from_bits_buff$D_IN;
	if (sync0_portal_b_from_bits_count$EN)
	  sync0_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync0_portal_b_from_bits_count$D_IN;
	if (sync0_portal_b_to_bits_count$EN)
	  sync0_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync0_portal_b_to_bits_count$D_IN;
	if (sync1_portal_b_from_bits_buff$EN)
	  sync1_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY
	      sync1_portal_b_from_bits_buff$D_IN;
	if (sync1_portal_b_from_bits_count$EN)
	  sync1_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync1_portal_b_from_bits_count$D_IN;
	if (sync1_portal_b_to_bits_count$EN)
	  sync1_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync1_portal_b_to_bits_count$D_IN;
	if (sync2_portal_b_from_bits_buff$EN)
	  sync2_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY
	      sync2_portal_b_from_bits_buff$D_IN;
	if (sync2_portal_b_from_bits_count$EN)
	  sync2_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync2_portal_b_from_bits_count$D_IN;
	if (sync2_portal_b_to_bits_count$EN)
	  sync2_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync2_portal_b_to_bits_count$D_IN;
	if (sync3_portal_b_from_bits_buff$EN)
	  sync3_portal_b_from_bits_buff <= `BSV_ASSIGNMENT_DELAY
	      sync3_portal_b_from_bits_buff$D_IN;
	if (sync3_portal_b_from_bits_count$EN)
	  sync3_portal_b_from_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync3_portal_b_from_bits_count$D_IN;
	if (sync3_portal_b_to_bits_count$EN)
	  sync3_portal_b_to_bits_count <= `BSV_ASSIGNMENT_DELAY
	      sync3_portal_b_to_bits_count$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    hw_cnt_reg = 64'hAAAAAAAAAAAAAAAA;
    sync0_portal_b_from_bits_buff = 32'hAAAAAAAA;
    sync0_portal_b_from_bits_count = 32'hAAAAAAAA;
    sync0_portal_b_to_bits_count = 32'hAAAAAAAA;
    sync1_portal_b_from_bits_buff = 32'hAAAAAAAA;
    sync1_portal_b_from_bits_count = 32'hAAAAAAAA;
    sync1_portal_b_to_bits_count = 32'hAAAAAAAA;
    sync2_portal_b_from_bits_buff = 32'hAAAAAAAA;
    sync2_portal_b_from_bits_count = 32'hAAAAAAAA;
    sync2_portal_b_to_bits_count = 32'hAAAAAAAA;
    sync3_portal_b_from_bits_buff = 32'hAAAAAAAA;
    sync3_portal_b_from_bits_count = 32'hAAAAAAAA;
    sync3_portal_b_to_bits_count = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkFSLVec

